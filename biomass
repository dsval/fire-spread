var start = ee.Date('2000-01-01');
var end = ee.Date('2019-01-02');
var bbox = ee.Geometry.Rectangle({coords:[-180,-90,180,60],geodesic:false});

var biomass_whrc = ee.Image('WHRC/biomass/tropical').select('Mg');
print(biomass_whrc,'biomass');
var LbandRAW = ee.ImageCollection('JAXA/ALOS/PALSAR/YEARLY/SAR')
                  .filter(ee.Filter.date(start, end));
 // var rawangle = dataset.select('angle').mean();
  //var mask = rawangle.gt(35);
var readLband = function(img){
  var angle= img.select('angle').divide(180).multiply(Math.PI).cos();
  var sarHh = img.select('HH').pow(2).log10().multiply(10).subtract(83).divide(angle);
      //sarHh= sarHh.updateMask(mask);
  var sarHV = img.select('HV').pow(2).log10().multiply(10).subtract(83).divide(angle);
  return sarHh.addBands(sarHV);
};

var Lband = LbandRAW.map(readLband);

print(Lband,'Lband');
////////////////////////////////////////////////////////////////////////////////////
// Load the Sentinel-1 ImageCollection.
///////////////////////////////////////////////////////////////////////////////////
var start = ee.Date('2019-01-01');
var end = ee.Date('2019-01-31');
var sentinel1 = ee.ImageCollection('COPERNICUS/S1_GRD') .filter(ee.Filter.date(start, end));

// Filter by metadata properties.
var Cband = sentinel1
  // Filter to get images with VV and VH dual polarization.
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'HH'))
  .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'HV'))
  // Filter to get images collected in interferometric wide swath mode.
  .filter(ee.Filter.eq('instrumentMode', 'IW'))
  //.filter(ee.Filter.eq('orbitProperties_pass', 'DESCENDING'))
  .select('HH');

print(Cband,'Cband');

// Display as a composite of polarization and backscattering characteristics.
Map.addLayer(Cband);
Map.addLayer(Lband);