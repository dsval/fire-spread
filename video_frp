var palettes = require('users/gena/packages:colorbrewer').Palettes;
var utils = require('users/gena/packages:utils')
var text = require('users/gena/packages:text')

var start = ee.Date('2017-08-26');
var finish = ee.Date('2017-08-29');
var bounds = 
    /* color: #98ff00 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-107.92522928693025, 56.74320901517033],
          [-107.92522928693025, 53.241686620805645],
          [-96.93890116193025, 53.241686620805645],
          [-96.93890116193025, 56.74320901517033]]], null, false);



//var bbox = ee.Geometry.Rectangle({coords:[-180,-90,180,90],geodesic:false}); 
var frp = ee.ImageCollection("NOAA/GOES/16/FDCF").select('Power').filterDate(start,finish).map(function(img) {
                   var mask = img.gt(1);
                   return img.updateMask(mask);
                   });
  
var frpVis = {
  min: 1,
  max: 20000,
  palette: ['white', 'blue', 'purple', 'cyan', 'green', 'yellow', 'red']
};

var frpvid=frp.map(function(img){
  return img.visualize(frpVis);
});


//var bounds = bbox.geometry().bounds();

//make the data 8-bit which is necessary for making a video
var ndvi_video =  frp.map(function(image){
  var start = ee.Date(image.get('system:time_start'))
  var end = ee.Date(image.get('system:time_end'))
  var label = start.format('YYYY-MM-dd').cat(' - ').cat(end.format('YYYY-MM-dd-HH:mm'));
  
  return image.visualize({
    forceRgbOutput: true,
    palette: palettes.BrBG[9], //original palette was "000000", "fdbb84"
    min: 0,
    max: 1
  }).clip(bounds).set({label: label});
});


// annotate
var annotations = [
  {
    position: 'left', offset: '1%', margin: '1%', property: 'label', scale: Map.getScale() * 2
  }
]

ndvi_video = ndvi_video.map(function(image) {
  return text.annotateImage(image, {}, bounds, annotations)
})
  


// add a few layers to map
var animation = require('users/gena/packages:animation')
animation.animate(frp, {maxFrames: 200})

//Map.centerObject(bounds, 9)

//Export NDVI from whole study area to video
Export.video.toDrive({
  collection: ndvi_video,
  description: "NDVItimelapse",    // Filename, no spaces allowed
  framesPerSecond: 1,             // I.e., 1 year / second
  region: bounds,
  scale: 250,                     // Scale in m
  });
  
  
/*
//get pixels with more than 3 gauges
Export.video.toDrive({
  collection: frpvid,
  description: 'frp_08_2017',
  dimensions: 180,
  framesPerSecond: 12,
  region: geometry
});
*/